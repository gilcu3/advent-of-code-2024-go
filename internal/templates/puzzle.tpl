// Code generated by aocgen; DO NOT EDIT.
package year{{.Year}}

import "fmt"

type Day{{.Day}} struct{}

const ansSampleA = ""

func (p Day{{.Day}}) PartA(lines []string) string {
    return fmt.Sprint(nil)
}

const ansSampleB = ""

func (p Day{{.Day}}) PartB(lines []string) string {
    return fmt.Sprint(nil)
}


func (p Day{{.Day}}) SampleA(lines []string) {
    ans := p.PartA(lines)
    if ans == fmt.Sprint(nil) {
    } else if ansSampleA == "" {
        fmt.Println("Correct answer PartA missing, got", ans)
    } else if ans != ansSampleA {
        fmt.Println("Answer to PartA incorrect", ans, ansSampleA)
    } else {
        fmt.Println("Answer to PartA correct", ans)
    }
}

func (p Day{{.Day}}) SampleB(lines []string) {
    ans := p.PartB(lines)
    if ans == fmt.Sprint(nil) {
    } else if ansSampleB == "" {
        fmt.Println("Correct answer PartB missing, got", ans)
    } else if ans != ansSampleA {
        fmt.Println("Answer to PartB incorrect", ans, ansSampleB)
    } else {
        fmt.Println("Answer to PartB correct", ans)
    }
}